{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/CharacterController.ts","webpack:///external {\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\",\"root\":\"BABYLON\"}"],"names":[],"mappings":"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","file":"CharacterController.max.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"babylonjs\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"babylonjs\")) : factory(root[\"BABYLON\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE_babylonjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/CharacterController.ts\");\n","import {\n    Skeleton,\n    ArcRotateCamera,\n    Vector3,\n    Mesh,\n    Node,\n    Scene,\n    Ray,\n    PickingInfo,\n    AnimationGroup,\n    TransformNode,\n    Matrix,\n    TargetedAnimation\n} from \"babylonjs\"\nimport { Action } from \"babylonjs/Actions/action\";\n\nexport class CharacterController {\n\n    private _avatar: Mesh = null;;\n    private _skeleton: Skeleton = null;\n    private _camera: ArcRotateCamera;\n    private _scene: Scene;\n    public getScene(): Scene {\n        return this._scene;\n    }\n\n\n    private _gravity: number = 9.8;\n    //slopeLimit in degrees\n    private _minSlopeLimit: number = 30;\n    private _maxSlopeLimit: number = 45;\n    //slopeLimit in radians\n    private _sl1: number = Math.PI * this._minSlopeLimit / 180;\n    private _sl2: number = Math.PI * this._maxSlopeLimit / 180;\n\n    //The av will step up a stair only if it is closer to the ground than the indicated value.\n    private _stepOffset: number = 0.25;\n    //toal amount by which the av has moved up\n    private _vMoveTot: number = 0;\n    //position of av when it started moving up\n    private _vMovStartPos: Vector3 = Vector3.Zero();\n\n\n    private _actionMap: ActionMap = new ActionMap();\n\n    private _cameraElastic: boolean = true;\n    private _cameraTarget: Vector3 = Vector3.Zero();\n    //should we go into first person view when camera is near avatar (radius is lowerradius limit)\n    private _noFirstPerson: boolean = false;\n\n\n\n    public setSlopeLimit(minSlopeLimit: number, maxSlopeLimit: number) {\n        this._minSlopeLimit = minSlopeLimit;\n        this._maxSlopeLimit = maxSlopeLimit;\n\n        this._sl1 = Math.PI * this._minSlopeLimit / 180;\n        this._sl2 = Math.PI * this._maxSlopeLimit / 180;\n    }\n\n    /**\n     * The av will step up a stair only if it is closer to the ground than the indicated value.\n     * Default value is 0.25 m\n     */\n    public setStepOffset(stepOffset: number) {\n        this._stepOffset = stepOffset;\n    }\n\n    public setWalkSpeed(n: number) {\n        this._actionMap.walk.speed = n;\n    }\n    public setRunSpeed(n: number) {\n        this._actionMap.run.speed = n;\n    }\n    public setBackSpeed(n: number) {\n        this._actionMap.walkBack.speed = n;\n    }\n    public setBackFastSpeed(n: number) {\n        this._actionMap.walkBackFast.speed = n;\n    }\n    public setJumpSpeed(n: number) {\n        this._actionMap.idleJump.speed = n;\n        this._actionMap.runJump.speed = n;\n    }\n    public setLeftSpeed(n: number) {\n        this._actionMap.strafeLeft.speed = n;\n    }\n    public setLeftFastSpeed(n: number) {\n        this._actionMap.strafeLeftFast.speed = n;\n    }\n    public setRightSpeed(n: number) {\n        this._actionMap.strafeRight.speed = n;\n    }\n    public setRightFastSpeed(n: number) {\n        this._actionMap.strafeLeftFast.speed = n;\n    }\n    // get turnSpeed in degrees per second.\n    // store in radians per second\n    public setTurnSpeed(n: number) {\n        this._actionMap.turnLeft.speed = n * Math.PI / 180;\n        this._actionMap.turnRight.speed = n * Math.PI / 180;\n    }\n    public setTurnFastSpeed(n: number) {\n        this._actionMap.turnLeftFast.speed = n * Math.PI / 180;\n        this._actionMap.turnRightFast.speed = n * Math.PI / 180;\n    }\n    public setGravity(n: number) {\n        this._gravity = n;\n    }\n\n    /**\n     * Use this to provide animationGroups to the character controller.\n     * Provide the AnimationGroups using a Map\n     * In this Map the key would be the character controller animation name and\n     * the key value would be the animationGroup.\n     * Example:\n     * let myWalkAnimationGroup:AnimationGroup = ...;\n     * let agMap:{} = {\n     *  \"walk\":myWalkAnimationGroup,\n     *  \"run\" : {\"ag\":myRunAnimationGroup,\"rate\":1},\n     *  \"idle\" : {\"ag\":myIdleAnimationGroup,\"loop\":true,\"rate\":1},\n     *  ....\n     *   ....\n     * }\n     *\n     * @param agMap a map of character controller animation name to animationGroup\n     */\n    public setAnimationGroups(agMap: {}) {\n        if (this._prevAnim != null && this._prevAnim.exist) this._prevAnim.ag.stop();\n        this._isAG = true;\n        this.setActionMap(<ActionMap>agMap);\n    }\n\n    /**\n     * Use this to provide AnimationRanges to the character controller.\n     * Provide the AnimationRanges using a Map\n     * In this Map the key would be the character controller animation name and\n     * the key value would be the animation range name or an object with animation range data.\n     * example:\n     * let arMap = {\n     *  \"walk\":\"myWalk\",\n     *  \"run\" : {\"name\":\"myRun\",\"rate\":1},\n     *  \"idle\" : {\"name\":\"myIdle\",\"loop\":true,\"rate\":1},\n     *  ....\n     * }\n     *\n     * @param arMap a map of character controller animation name to animationRange data\n     */\n\n    public setAnimationRanges(arMap: {}) {\n        this._isAG = false;\n        this.setActionMap(<ActionMap>arMap);\n    }\n\n    /**\n     * sets the action data.\n     *\n     * return \"ar\" or \"ag\" depending on if the data provided\n     * was animation range or animation group data respt.\n     *\n     * TODO should validate provided data.\n     * In other words if animation range provided make sure\n     * the range exist in the skeleton\n     * or if animation group provided make sure the animation group\n     * can be played on this avataor\n     *\n     * @param actmapI\n     * @returns\n     */\n    public setActionMap(actmapI: ActionMap): string {\n        let agMap: boolean = false;\n        let actDataI: ActionData;\n        let keys: string[] = Object.keys(this._actionMap);\n        for (let key of keys) {\n            let actDataO = this._actionMap[key];\n            if (!(actDataO instanceof ActionData)) continue;\n\n            actDataI = actmapI[actDataO.id];\n            actDataO.exist = false;\n            if (actDataI != null && actDataI.exist) {\n                this._hasAnims = true;\n                actDataO.exist = true;\n                if (actDataI instanceof AnimationGroup) {\n                    actDataO.ag = actDataI;\n                    actDataO.name = actDataO.ag.name\n                    agMap = true;\n                } else {\n                    if (actDataI instanceof Object) {\n                        if (actDataI.ag) {\n                            actDataO.ag = actDataI.ag;\n                            agMap = true;\n                        }\n                        if (actDataI.name) {\n                            actDataO.name = actDataI.name;\n                        }\n                        if (actDataI.loop != null) actDataO.loop = actDataI.loop;\n                        if (actDataI.rate) actDataO.rate = actDataI.rate;\n                        if (actDataI.speed) actDataO.speed = actDataI.speed;\n                        // if (actDataI.key) actDataO.key = actDataI.key;\n                        if (actDataI.sound) actDataO.sound = actDataI.sound;\n                    } else {\n                        actDataO.name = actDataI;\n                    }\n\n                }\n            }\n        }\n        console.log(this._actionMap);\n        this._checkFastAnims();\n        //force to play new anims\n        this._prevAnim = null;\n        if (agMap) return \"ag\"; else return \"ar\";\n    }\n\n    public getActionMap(): ActionMap {\n        let map: ActionMap = new ActionMap();\n\n        let keys: string[] = Object.keys(this._actionMap);\n        for (let key of keys) {\n            let actDataI = this._actionMap[key];\n\n            if (!(actDataI instanceof ActionData)) continue;\n            if (!actDataI.exist) continue;\n\n            let actDataO: ActionData = map[actDataI.id];\n            actDataO.ag = actDataI.ag;\n            actDataO.name = actDataI.name;\n            actDataO.loop = actDataI.loop;\n            actDataO.rate = actDataI.rate;\n            actDataO.speed = actDataI.speed;\n            actDataO.key = actDataI.key;\n            actDataO.sound = actDataI.sound;\n            actDataO.exist = actDataI.exist;\n        }\n\n        return map;\n    }\n\n    public getSettings(): CCSettings {\n        let ccs: CCSettings = new CCSettings();\n        ccs.faceForward = this.isFaceForward();\n        ccs.topDown = this.getMode() == 1 ? true : false;\n        ccs.turningOff = this.isTurningOff();\n        ccs.cameraTarget = this._cameraTarget.clone();\n        ccs.cameraElastic = this._cameraElastic;\n        ccs.gravity = this._gravity;\n        ccs.keyboard = this._ekb;\n        ccs.maxSlopeLimit = this._maxSlopeLimit;\n        ccs.minSlopeLimit = this._minSlopeLimit;\n        ccs.noFirstPerson = this._noFirstPerson;\n        ccs.stepOffset = this._stepOffset;\n\n        return ccs;\n    }\n\n    public setSettings(ccs: CCSettings) {\n        this.setFaceForward(ccs.faceForward);\n        this.setMode(ccs.topDown ? 1 : 0);\n        this.setTurningOff(ccs.turningOff);\n        this.setCameraTarget(ccs.cameraTarget);\n        this.setCameraElasticity(ccs.cameraElastic);\n        this.setGravity(ccs.gravity);\n        this.enableKeyBoard(ccs.keyboard);\n        this.setSlopeLimit(ccs.minSlopeLimit, ccs.maxSlopeLimit);\n        this.setNoFirstPerson(ccs.noFirstPerson);\n        this.setStepOffset(ccs.stepOffset);\n\n    }\n\n\n\n    private _setAnim(anim: ActionData, rangeName?: string | AnimationGroup, rate?: number, loop?: boolean) {\n\n        //aniamtion range need skeleton\n        if (!this._isAG && this._skeleton == null) return;\n\n        if (this._isAG) {\n            if (!(rangeName instanceof AnimationGroup)) return;\n            if (rangeName != null) {\n                anim.ag = <AnimationGroup>rangeName;\n                anim.exist = true;\n            }\n        } else {\n            if (this._skeleton.getAnimationRange(anim.name) != null) {\n                anim.exist = true;\n            } else {\n                anim.exist = false;\n                return;\n            }\n            if (rangeName != null) anim.name = <string>rangeName;\n        }\n\n        if (loop != null) anim.loop = loop;\n        if (rate != null) anim.rate = rate;\n    }\n\n    public enableBlending(n: number) {\n        if (this._isAG) {\n            let keys: string[] = Object.keys(this._actionMap);\n            for (let key of keys) {\n                let act = this._actionMap[key];\n                if (!(act instanceof ActionData)) continue;\n                if (act.exist) {\n                    let ar: AnimationGroup = act.ag;\n                    for (let ta of ar.targetedAnimations) {\n                        ta.animation.enableBlending = true;\n                        ta.animation.blendingSpeed = n;\n                    }\n                }\n            }\n        } else {\n            if (this._skeleton !== null)\n                this._skeleton.enableBlending(n);\n        }\n    }\n\n    public disableBlending() {\n        if (this._isAG) {\n            let keys: string[] = Object.keys(this._actionMap);\n            for (let key of keys) {\n                let anim = this._actionMap[key];\n                if (!(anim instanceof ActionData)) continue;\n                if (anim.exist) {\n                    let ar: AnimationGroup = anim.ag;\n                    for (let ta of ar.targetedAnimations) {\n                        ta.animation.enableBlending = false;\n                    }\n                }\n            }\n        }\n    }\n\n    //setters for animations\n    public setWalkAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.walk, rangeName, rate, loop);\n    }\n    public setRunAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.run, rangeName, rate, loop);\n    }\n    public setWalkBackAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.walkBack, rangeName, rate, loop);\n        this._copySlowAnims(this._actionMap.walkBackFast, this._actionMap.walkBack);\n    }\n    public setWalkBackFastAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.walkBackFast, rangeName, rate, loop);\n    }\n    public setSlideBackAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.slideBack, rangeName, rate, loop);\n    }\n    public setIdleAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.idle, rangeName, rate, loop);\n    }\n    public setTurnRightAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.turnRight, rangeName, rate, loop);\n        this._copySlowAnims(this._actionMap.turnRightFast, this._actionMap.turnRight);\n    }\n    public setTurnRightFastAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.turnRightFast, rangeName, rate, loop);\n    }\n    public setTurnLeftAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.turnLeft, rangeName, rate, loop);\n        this._copySlowAnims(this._actionMap.turnLeftFast, this._actionMap.turnLeft);\n    }\n    public setTurnLeftFastAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.turnLeftFast, rangeName, rate, loop);\n    }\n    public setStrafeRightAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.strafeRight, rangeName, rate, loop);\n        this._copySlowAnims(this._actionMap.strafeRightFast, this._actionMap.strafeRight);\n    }\n    public setStrafeRightFastAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.strafeRightFast, rangeName, rate, loop);\n    }\n    public setStrafeLeftAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.strafeLeft, rangeName, rate, loop);\n        this._copySlowAnims(this._actionMap.strafeLeftFast, this._actionMap.strafeLeft);\n    }\n    public setStrafeLeftFastAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.strafeLeftFast, rangeName, rate, loop);\n    }\n    public setIdleJumpAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.idleJump, rangeName, rate, loop);\n    }\n    public setRunJumpAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.runJump, rangeName, rate, loop);\n    }\n    public setFallAnim(rangeName: string | AnimationGroup, rate: number, loop: boolean) {\n        this._setAnim(this._actionMap.fall, rangeName, rate, loop);\n    }\n\n    // setters for keys\n    public setWalkKey(key: string) {\n        this._actionMap.walk.key = key.toLowerCase();\n    }\n    public setWalkBackKey(key: string) {\n        this._actionMap.walkBack.key = key.toLowerCase();\n    }\n    public setTurnLeftKey(key: string) {\n        this._actionMap.turnLeft.key = key.toLowerCase();\n    }\n    public setTurnRightKey(key: string) {\n        this._actionMap.turnRight.key = key.toLowerCase();\n    }\n    public setStrafeLeftKey(key: string) {\n        this._actionMap.strafeLeft.key = key.toLowerCase();\n    }\n    public setStrafeRightKey(key: string) {\n        this._actionMap.strafeRight.key = key.toLowerCase();\n    }\n    public setJumpKey(key: string) {\n        this._actionMap.idleJump.key = key.toLowerCase();\n    }\n\n    public setCameraElasticity(b: boolean) {\n        this._cameraElastic = b;\n    }\n    public setCameraTarget(v: Vector3) {\n        this._cameraTarget.copyFrom(v);\n    }\n\n\n    /**\n     * user should call this whenever the user changes the camera checkCollision\n     * property\n     *\n     */\n    public cameraCollisionChanged() {\n        this._savedCameraCollision = this._camera.checkCollisions;\n    }\n    public setNoFirstPerson(b: boolean) {\n        this._noFirstPerson = b;\n    }\n\n    /**\n     * if av has the required anim (walk, run etc) then\n     * mark that anim as existing\n     *\n     * @param skel\n     */\n\n    private _checkAnimRanges(skel: Skeleton) {\n        let keys: string[] = Object.keys(this._actionMap);\n        for (let key of keys) {\n            let anim = this._actionMap[key];\n            if (!(anim instanceof ActionData)) continue;\n            if (skel != null) {\n                if (skel.getAnimationRange(anim.id) != null) {\n                    anim.name = anim.id;\n                    anim.exist = true;\n                    this._hasAnims = true;\n                }\n            } else {\n                anim.exist = false;\n            }\n        }\n        this._checkFastAnims();\n    }\n\n    /**\n     * if fast anims do not exist then use their slow counterpart as them but double the rate at which they play\n     */\n    private _checkFastAnims() {\n        this._copySlowAnims(this._actionMap.walkBackFast, this._actionMap.walkBack)\n        this._copySlowAnims(this._actionMap.turnRightFast, this._actionMap.turnRight);\n        this._copySlowAnims(this._actionMap.turnLeftFast, this._actionMap.turnLeft);\n        this._copySlowAnims(this._actionMap.strafeRightFast, this._actionMap.strafeRight);\n        this._copySlowAnims(this._actionMap.strafeLeftFast, this._actionMap.strafeLeft);\n    }\n\n    private _copySlowAnims(f: ActionData, s: ActionData) {\n        if (f.exist) return;\n        if (!s.exist) return;\n        f.exist = true;\n        f.ag = s.ag;\n        f.name = s.name;\n        f.rate = s.rate * 2;\n    }\n\n    /**\n     * Use this to make the  character controller suitable for a isometeric/top down games or  fps/third person game.\n     * 1 In isometric/top down games the camera direction has no bearing on avatar movement.\n     * 0 In fps/third person game rotating the camera around the avatar , rotates the avatr too.\n     */\n    private _mode = 0;\n    private _saveMode = 0;\n    public setMode(n: number) {\n        this._mode = n;\n        this._saveMode = n;\n    }\n    public getMode() {\n        return this._mode;\n    }\n    /**\n     * Use this to set  turning off.\n     * When turining is off\n     * a) turn left or turn right keys result in avatar facing and moving left or right with respect to camera.\n     * b) walkback/runback key results in avatar facing back and walking/running towards camera.\n     *\n     * This setting has no effect when mode is 1.\n     *\n     * @param b\n     */\n    public setTurningOff(b: boolean) {\n        this._noRot = b;\n    }\n    public isTurningOff() {\n        return this._noRot;\n    }\n\n    /**\n        * checks if a have left hand , right hand issue.\n        * In other words if a mesh is a LHS mesh in RHS system or\n        * a RHS mesh in LHS system\n        * The X axis will be reversed in such cases.\n        * thus Cross product of X and Y should be inverse of Z.\n        * BABYLONJS GLB models are RHS and exhibit this behavior\n        *\n        */\n    private _isRHS = false;\n    private _signRHS = -1;\n    private _setRHS(mesh: TransformNode) {\n        const meshMatrix: any = mesh.getWorldMatrix();\n        const _localX = Vector3.FromFloatArray(meshMatrix.m, 0);\n        const _localY = Vector3.FromFloatArray(meshMatrix.m, 4);\n        const _localZ = Vector3.FromFloatArray(meshMatrix.m, 8);\n        const actualZ = Vector3.Cross(_localX, _localY);\n        //same direction or opposite direction of Z\n        if (Vector3.Dot(actualZ, _localZ) < 0) {\n            this._isRHS = true;\n            this._signRHS = 1;\n        }\n        else {\n            this._isRHS = false;\n            this._signRHS = -1;\n        }\n    }\n\n    /**\n     * Use setFaceForward(true|false) to indicate that the avatar face  faces forward (true) or backward (false).\n     * The avatar face faces forward if its face points to positive local Z axis direction\n     */\n    private _ffSign: number;\n    private _ff: boolean;\n    //in mode 0, av2cam is used to align avatar with camera , with camera always facing avatar's back\n    //note:camera alpha is measured anti-clockwise , avatar rotation is measured clockwise\n    private _av2cam;\n    public setFaceForward(b: boolean) {\n        this._ff = b;\n        if (this._isRHS) {\n            this._av2cam = b ? Math.PI / 2 : 3 * Math.PI / 2;\n            this._ffSign = b ? 1 : -1;\n        } else {\n            this._av2cam = b ? 3 * Math.PI / 2 : Math.PI / 2;\n            this._ffSign = b ? -1 : 1;\n        }\n    }\n    public isFaceForward() {\n        return this._ff;\n    }\n\n    private checkAGs(agMap: {}) {\n        let keys: string[] = Object.keys(this._actionMap);\n        for (let key of keys) {\n            let anim = this._actionMap[key];\n            if (!(anim instanceof ActionData)) continue;\n            if (agMap[anim.name] != null) {\n                anim.ag = agMap[anim.name];\n                anim.exist = true;\n            }\n        }\n    }\n\n    // check if any of the mesh on the node tree has any aniamtion group\n    private _containsAG(node: Node, ags: AnimationGroup[], fromRoot: boolean) {\n        let r: Node;\n        let ns: Node[];\n\n        if (fromRoot) {\n            r = this._getRoot(node);\n            ns = r.getChildren((n) => { return (n instanceof TransformNode) }, false);\n        } else {\n            r = node;\n            ns = [r];\n        }\n        for (let ag of ags) {\n            let tas: TargetedAnimation[] = ag.targetedAnimations;\n            for (let ta of tas) {\n                if (ns.indexOf(ta.target) > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    //get the root of Node\n    private _getRoot(tn: Node): Node {\n        if (tn.parent == null) return tn;\n        return this._getRoot(tn.parent);\n    }\n\n    private _started: boolean = false;\n    public start() {\n        if (this._started) return;\n        this._started = true;\n        this._act.reset();\n        this._movFallTime = 0;\n        //first time we enter render loop, delta time is zero\n        this._idleFallTime = 0.001;\n        this._grounded = false;\n        this._updateTargetValue();\n        this.enableKeyBoard(true);\n        this._scene.registerBeforeRender(this._renderer);\n    }\n\n    public stop() {\n        if (!this._started) return;\n        this._started = false;\n        this._scene.unregisterBeforeRender(this._renderer);\n        this.enableKeyBoard(false);\n        this._prevAnim = null;\n    }\n\n    /**\n     * use pauseAnim to stop the charactere controller from playing\n     * any animation on the character\n     * use this when you want to play your animation instead\n     * see also resumeAnim()\n     */\n    private _stopAnim: boolean = false;\n    public pauseAnim() {\n        this._stopAnim = true;\n    }\n\n    /**\n     * use resumeAnim to resume the character controller playing\n     * animations on the character.\n     * see also pauseAnim()\n     */\n    public resumeAnim() {\n        this._stopAnim = false;\n    }\n\n    private _prevAnim: ActionData = null;\n    private _avStartPos: Vector3 = Vector3.Zero();\n    private _grounded: boolean = false;\n    //distance by which AV would move down if in freefall\n    private _freeFallDist: number = 0;\n\n    //how many minimum contiguos frames should the AV have been in free fall\n    //before we assume AV is in big freefall.\n    //we will use this to remove animation flicker during move down a slope (fall, move, fall move etc)\n    //TODO: base this on slope - large slope large count\n    private _fallFrameCountMin: number = 50;\n    private _fallFrameCount: number = 0;\n\n    private _inFreeFall: boolean = false;\n    private _wasWalking: boolean = false;\n    private _wasRunning: boolean = false;\n    private _moveVector: Vector3;\n\n    //used only in mode 1\n    //value 1 or -1 , -1 if avatar is facing camera\n    //private _notFacingCamera = 1;\n\n    private _isAvFacingCamera(): number {\n        if (Vector3.Dot(this._avatar.forward, this._avatar.position.subtract(this._camera.position)) < 0) return 1\n        else return -1;\n    }\n\n    private _moveAVandCamera() {\n        this._avStartPos.copyFrom(this._avatar.position);\n        let anim: ActionData = null;\n        const dt: number = this._scene.getEngine().getDeltaTime() / 1000;\n\n        if (this._act._jump && !this._inFreeFall) {\n            this._grounded = false;\n            this._idleFallTime = 0;\n            anim = this._doJump(dt);\n        } else if (this.anyMovement() || this._inFreeFall) {\n            this._grounded = false;\n            this._idleFallTime = 0;\n            anim = this._doMove(dt);\n        } else if (!this._inFreeFall) {\n            anim = this._doIdle(dt);\n        }\n        if (!this._stopAnim && this._hasAnims && anim != null) {\n            if (this._prevAnim !== anim) {\n                if (anim.exist) {\n                    if (this._isAG) {\n                        if (this._prevAnim != null && this._prevAnim.exist) this._prevAnim.ag.stop();\n                        //TODO use start instead of play ?\n                        //anim._ag.play(anim._loop);\n                        //anim._ag.speedRatio = anim._rate;\n                        anim.ag.start(anim.loop, anim.rate);\n                    } else {\n                        this._skeleton.beginAnimation(anim.name, anim.loop, anim.rate);\n                    }\n                }\n                this._prevAnim = anim;\n            }\n        }\n        this._updateTargetValue();\n        return;\n    }\n\n    //verical position of AV when it is about to start a jump\n    private _jumpStartPosY: number = 0;\n    //for how long the AV has been in the jump\n    private _jumpTime: number = 0;\n    private _doJump(dt: number): ActionData {\n\n        let anim: ActionData = null;\n        anim = this._actionMap.runJump;\n        if (this._jumpTime === 0) {\n            this._jumpStartPosY = this._avatar.position.y;\n        }\n\n        this._jumpTime = this._jumpTime + dt;\n\n        let forwardDist: number = 0;\n        let jumpDist: number = 0;\n        let disp: Vector3;\n        if (this._mode != 1 && !this._noRot) this._avatar.rotation.y = this._av2cam - this._camera.alpha;\n        if (this._wasRunning || this._wasWalking) {\n            if (this._wasRunning) {\n                forwardDist = this._actionMap.run.speed * dt;\n            } else if (this._wasWalking) {\n                forwardDist = this._actionMap.walk.speed * dt;\n            }\n            //find out in which horizontal direction the AV was moving when it started the jump\n            disp = this._moveVector.clone();\n            disp.y = 0;\n            disp = disp.normalize();\n            disp.scaleToRef(forwardDist, disp);\n            jumpDist = this._calcJumpDist(this._actionMap.runJump.speed, dt);\n            disp.y = jumpDist;\n        } else {\n            jumpDist = this._calcJumpDist(this._actionMap.idleJump.speed, dt);\n            disp = new Vector3(0, jumpDist, 0);\n            anim = this._actionMap.idleJump;\n            //this.avatar.ellipsoid.y=this._ellipsoid.y/2;\n        }\n        //moveWithCollision only seems to happen if length of displacment is atleast 0.001\n        this._avatar.moveWithCollisions(disp);\n        if (jumpDist < 0) {\n            //this.avatar.ellipsoid.y=this._ellipsoid.y;\n            //check if going up a slope or back on flat ground\n            if ((this._avatar.position.y > this._avStartPos.y) || ((this._avatar.position.y === this._avStartPos.y) && (disp.length() > 0.001))) {\n                this._endJump();\n            } else if (this._avatar.position.y < this._jumpStartPosY) {\n                //the avatar is below the point from where it started the jump\n                //so it is either in free fall or is sliding along a downward slope\n                //\n                //if the actual displacemnt is same as the desired displacement then AV is in freefall\n                //else it is on a slope\n                const actDisp: Vector3 = this._avatar.position.subtract(this._avStartPos);\n                if (!(this._areVectorsEqual(actDisp, disp, 0.001))) {\n                    //AV is on slope\n                    //Should AV continue to slide or stop?\n                    //if slope is less steeper than acceptable then stop else slide\n                    if (this._verticalSlope(actDisp) <= this._sl1) {\n                        this._endJump();\n                    }\n                } else {\n                    anim = this._actionMap.fall;\n                }\n            }\n        }\n        return anim;\n    }\n\n    private _calcJumpDist(speed: number, dt: number): number {\n        //up velocity at the begining of the lastt frame (v=u+at)\n        let js: number = speed - this._gravity * this._jumpTime;\n        //distance travelled up since last frame to this frame (s=ut+1/2*at^2)\n        let jumpDist: number = js * dt - 0.5 * this._gravity * dt * dt;\n        return jumpDist;\n    }\n\n    /**\n     * does cleanup at the end of a jump\n     */\n    private _endJump() {\n        this._act._jump = false;\n        this._jumpTime = 0;\n        this._wasWalking = false;\n        this._wasRunning = false;\n    }\n\n    /**\n     * checks if two vectors v1 and v2 are equal within a precision of p\n     */\n    private _areVectorsEqual(v1: Vector3, v2: Vector3, p: number) {\n        return ((Math.abs(v1.x - v2.x) < p) && (Math.abs(v1.y - v2.y) < p) && (Math.abs(v1.z - v2.z) < p));\n    }\n\n    /*\n     * returns the slope (in radians) of a vector in the vertical plane\n     */\n    private _verticalSlope(v: Vector3): number {\n        return Math.atan(Math.abs(v.y / Math.sqrt(v.x * v.x + v.z * v.z)));\n    }\n\n    //for how long has the av been falling while moving\n    private _movFallTime: number = 0;\n    private _sign = 1;\n    private _isTurning = false;\n    private _noRot = false;\n    private _doMove(dt: number): ActionData {\n\n        //initial down velocity\n        const u: number = this._movFallTime * this._gravity\n        //calculate the distance by which av should fall down since last frame\n        //assuming it is in freefall\n        this._freeFallDist = u * dt + this._gravity * dt * dt / 2;\n\n        this._movFallTime = this._movFallTime + dt;\n\n        let moving: boolean = false;\n        let anim: ActionData = null;\n\n        if (this._inFreeFall) {\n            this._moveVector.y = -this._freeFallDist;\n            moving = true;\n        } else {\n            this._wasWalking = false;\n            this._wasRunning = false;\n\n            let sign: number;\n            let horizDist: number = 0;\n            switch (true) {\n                case (this._act._stepLeft):\n                    sign = this._signRHS * this._isAvFacingCamera();\n                    horizDist = this._actionMap.strafeLeft.speed * dt;\n                    if (this._act._speedMod) {\n                        horizDist = this._actionMap.strafeLeftFast.speed * dt;\n                        anim = (-this._ffSign * sign > 0) ? this._actionMap.strafeLeftFast : this._actionMap.strafeRightFast;\n                    } else {\n                        anim = (-this._ffSign * sign > 0) ? this._actionMap.strafeLeft : this._actionMap.strafeRight;\n                    }\n\n                    this._moveVector = this._avatar.calcMovePOV(sign * horizDist, -this._freeFallDist, 0);\n                    moving = true;\n                    break;\n                case (this._act._stepRight):\n                    sign = -this._signRHS * this._isAvFacingCamera();\n                    horizDist = this._actionMap.strafeRight.speed * dt;\n                    if (this._act._speedMod) {\n                        horizDist = this._actionMap.strafeRightFast.speed * dt;\n                        anim = (-this._ffSign * sign > 0) ? this._actionMap.strafeLeftFast : this._actionMap.strafeRightFast;\n                    } else {\n                        anim = (-this._ffSign * sign > 0) ? this._actionMap.strafeLeft : this._actionMap.strafeRight;\n                    }\n                    this._moveVector = this._avatar.calcMovePOV(sign * horizDist, -this._freeFallDist, 0);\n                    moving = true;\n                    break;\n                case (this._act._walk || (this._noRot && this._mode == 0)):\n                    if (this._act._speedMod) {\n                        this._wasRunning = true;\n                        horizDist = this._actionMap.run.speed * dt;\n                        anim = this._actionMap.run;\n                    } else {\n                        this._wasWalking = true;\n                        horizDist = this._actionMap.walk.speed * dt;\n                        anim = this._actionMap.walk;\n                    }\n                    this._moveVector = this._avatar.calcMovePOV(0, -this._freeFallDist, this._ffSign * horizDist);\n                    moving = true;\n                    break;\n                case (this._act._walkback):\n                    horizDist = this._actionMap.walkBack.speed * dt;\n                    if (this._act._speedMod) {\n                        horizDist = this._actionMap.walkBackFast.speed * dt;\n                        anim = this._actionMap.walkBackFast;\n                    } else {\n                        anim = this._actionMap.walkBack;\n                    }\n                    this._moveVector = this._avatar.calcMovePOV(0, -this._freeFallDist, -this._ffSign * horizDist);\n                    moving = true;\n                    break;\n\n            }\n\n        }\n\n        if (!(this._noRot && this._mode == 0) && (!this._act._stepLeft && !this._act._stepRight) && (this._act._turnLeft || this._act._turnRight)) {\n            let turnAngle = this._actionMap.turnLeft.speed * dt;\n            if (this._act._speedMod) {\n                turnAngle = 2 * turnAngle;\n            }\n            if (this._mode == 1) {\n                // while turining, the avatar could start facing away from camera and end up facing camera.\n                // we should not switch turning direction during this transition\n                if (!this._isTurning) {\n                    // if (this._act.name != this._act.prevName) {\n                    // this._act.prevName = this._act.name;\n                    this._sign = -this._ffSign * this._isAvFacingCamera();\n                    if (this._isRHS) this._sign = - this._sign;\n                    this._isTurning = true;\n                }\n                let a = this._sign;\n                if (this._act._turnLeft) {\n                    if (this._act._walk) { }\n                    else if (this._act._walkback) a = -this._sign;\n                    else {\n                        anim = (this._sign > 0) ? this._actionMap.turnRight : this._actionMap.turnLeft;\n                    }\n                } else {\n                    if (this._act._walk) a = -this._sign;\n                    else if (this._act._walkback) { }\n                    else {\n                        a = -this._sign;\n                        anim = (this._sign > 0) ? this._actionMap.turnLeft : this._actionMap.turnRight;\n                    }\n                }\n                this._avatar.rotation.y = this._avatar.rotation.y + turnAngle * a;\n            } else {\n                let a = 1;\n                if (this._act._turnLeft) {\n                    if (this._act._walkback) a = -1;\n                    if (!moving) anim = this._actionMap.turnLeft;\n                } else {\n                    if (this._act._walk) a = -1;\n                    if (!moving) { a = -1; anim = this._actionMap.turnRight; }\n                }\n                this._camera.alpha = this._camera.alpha + turnAngle * a;\n            }\n        }\n\n        if (this._mode != 1) {\n            if (this._noRot) {\n                switch (true) {\n                    case (this._act._walk && this._act._turnRight):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha + Math.PI / 4;\n                        break;\n                    case (this._act._walk && this._act._turnLeft):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha - Math.PI / 4;\n                        break;\n                    case (this._act._walkback && this._act._turnRight):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha + 3 * Math.PI / 4;\n                        break;\n                    case (this._act._walkback && this._act._turnLeft):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha - 3 * Math.PI / 4;\n                        break;\n                    case (this._act._walk):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha;\n                        break;\n                    case (this._act._walkback):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha + Math.PI;\n                        break;\n                    case (this._act._turnRight):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha + Math.PI / 2;\n                        break;\n                    case (this._act._turnLeft):\n                        this._avatar.rotation.y = this._av2cam - this._camera.alpha - Math.PI / 2;\n                        break;\n                }\n            } else {\n                this._avatar.rotation.y = this._av2cam - this._camera.alpha;\n            }\n        } else {\n\n        }\n\n        if (moving) {\n            if (this._moveVector.length() > 0.001) {\n                this._avatar.moveWithCollisions(this._moveVector);\n                //walking up a slope\n                if (this._avatar.position.y > this._avStartPos.y) {\n                    const actDisp: Vector3 = this._avatar.position.subtract(this._avStartPos);\n                    const _slp: number = this._verticalSlope(actDisp);\n                    if (_slp >= this._sl2) {\n                        //this._climbingSteps=true;\n                        //is av trying to go up steps\n                        if (this._stepOffset > 0) {\n                            if (this._vMoveTot == 0) {\n                                //if just started climbing note down the position\n                                this._vMovStartPos.copyFrom(this._avStartPos);\n                            }\n                            this._vMoveTot = this._vMoveTot + (this._avatar.position.y - this._avStartPos.y);\n                            if (this._vMoveTot > this._stepOffset) {\n                                //move av back to its position at begining of steps\n                                this._vMoveTot = 0;\n                                this._avatar.position.copyFrom(this._vMovStartPos);\n                                this._endFreeFall();\n                            }\n                        } else {\n                            //move av back to old position\n                            this._avatar.position.copyFrom(this._avStartPos);\n                            this._endFreeFall();\n                        }\n                    } else {\n                        this._vMoveTot = 0;\n                        if (_slp > this._sl1) {\n                            //av is on a steep slope , continue increasing the moveFallTIme to deaccelerate it\n                            this._fallFrameCount = 0;\n                            this._inFreeFall = false;\n                        } else {\n                            //continue walking\n                            this._endFreeFall();\n                        }\n                    }\n                } else if ((this._avatar.position.y) < this._avStartPos.y) {\n                    const actDisp: Vector3 = this._avatar.position.subtract(this._avStartPos);\n                    if (!(this._areVectorsEqual(actDisp, this._moveVector, 0.001))) {\n                        //AV is on slope\n                        //Should AV continue to slide or walk?\n                        //if slope is less steeper than acceptable then walk else slide\n                        if (this._verticalSlope(actDisp) <= this._sl1) {\n                            this._endFreeFall();\n                        } else {\n                            //av is on a steep slope , continue increasing the moveFallTIme to deaccelerate it\n                            this._fallFrameCount = 0;\n                            this._inFreeFall = false;\n                        }\n                    } else {\n                        this._inFreeFall = true;\n                        this._fallFrameCount++;\n                        //AV could be running down a slope which mean freefall,run,frefall run ...\n                        //to remove anim flicker, check if AV has been falling down continously for last few consecutive frames\n                        //before changing to free fall animation\n                        if (this._fallFrameCount > this._fallFrameCountMin) {\n                            anim = this._actionMap.fall;\n                        }\n                    }\n                } else {\n                    this._endFreeFall();\n                }\n            }\n        }\n        return anim;\n    }\n\n    private _endFreeFall(): void {\n        this._movFallTime = 0;\n        this._fallFrameCount = 0;\n        this._inFreeFall = false;\n    }\n\n    //for how long has the av been falling while idle (not moving)\n    private _idleFallTime: number = 0;\n    private _doIdle(dt: number): ActionData {\n        if (this._grounded) {\n            return this._actionMap.idle;\n        }\n        this._wasWalking = false;\n        this._wasRunning = false;\n        this._movFallTime = 0;\n        let anim: ActionData = this._actionMap.idle;\n        this._fallFrameCount = 0;\n\n\n        if (dt === 0) {\n            this._freeFallDist = 5;\n        } else {\n            const u: number = this._idleFallTime * this._gravity\n            this._freeFallDist = u * dt + this._gravity * dt * dt / 2;\n            this._idleFallTime = this._idleFallTime + dt;\n        }\n        //if displacement is less than 0.01(? need to verify further) then\n        //moveWithDisplacement down against a surface seems to push the AV up by a small amount!!\n        if (this._freeFallDist < 0.01) return anim;\n        const disp: Vector3 = new Vector3(0, -this._freeFallDist, 0);\n        if (this._mode != 1 && !this._noRot) this._avatar.rotation.y = this._av2cam - this._camera.alpha;\n        this._avatar.moveWithCollisions(disp);\n        if ((this._avatar.position.y > this._avStartPos.y) || (this._avatar.position.y === this._avStartPos.y)) {\n            //                this.grounded = true;\n            //                this.idleFallTime = 0;\n            this._groundIt();\n        } else if (this._avatar.position.y < this._avStartPos.y) {\n            //AV is going down.\n            //AV is either in free fall or is sliding along a downward slope\n            //\n            //if the actual displacemnt is same as the desired displacement then AV is in freefall\n            //else it is on a slope\n            const actDisp: Vector3 = this._avatar.position.subtract(this._avStartPos);\n            if (!(this._areVectorsEqual(actDisp, disp, 0.001))) {\n                //AV is on slope\n                //Should AV continue to slide or stop?\n                //if slope is less steeper than accebtable then stop else slide\n                if (this._verticalSlope(actDisp) <= this._sl1) {\n                    //                        this.grounded = true;\n                    //                        this.idleFallTime = 0;\n                    this._groundIt();\n                    this._avatar.position.copyFrom(this._avStartPos);\n                } else {\n                    this._unGroundIt();\n                    anim = this._actionMap.slideBack;\n                }\n            }\n        }\n        return anim;\n    }\n\n    private _groundFrameCount = 0;\n    private _groundFrameMax = 10;\n    /**\n     * donot ground immediately\n     * wait few more frames\n     */\n    private _groundIt(): void {\n        this._groundFrameCount++;\n        if (this._groundFrameCount > this._groundFrameMax) {\n            this._grounded = true;\n            this._idleFallTime = 0;\n        }\n    }\n    private _unGroundIt() {\n        this._grounded = false;\n        this._groundFrameCount = 0;\n    }\n\n    private _savedCameraCollision: boolean = true;\n    private _inFP = false;\n    private _updateTargetValue() {\n        //donot move camera if av is trying to clinb steps\n        if (this._vMoveTot == 0)\n            this._avatar.position.addToRef(this._cameraTarget, this._camera.target);\n\n        if (this._camera.radius > this._camera.lowerRadiusLimit) { if (this._cameraElastic) this._snapCamera(); }\n\n        if (this._camera.radius <= this._camera.lowerRadiusLimit) {\n            if (!this._noFirstPerson && !this._inFP) {\n                this._avatar.visibility = 0;\n                this._camera.checkCollisions = false;\n                this._saveMode = this._mode;\n                this._mode = 0;\n                this._inFP = true;\n            }\n        } else {\n            this._inFP = false;\n            this._mode = this._saveMode;\n            this._avatar.visibility = 1;\n            this._camera.checkCollisions = this._savedCameraCollision;\n        }\n    }\n\n    private _ray: Ray = new Ray(Vector3.Zero(), Vector3.One(), 1);\n    private _rayDir: Vector3 = Vector3.Zero();\n    //camera seems to get stuck into things\n    //should move camera away from things by a value of cameraSkin\n    private _cameraSkin: number = 0.5;\n    private _skip: number = 0;\n    private _snapCamera() {\n        //            if(this.skip<120) {\n        //                this.skip++;\n        //                return;\n        //            }\n        //            this.skip=0;\n        //get vector from av (camera.target) to camera\n        this._camera.position.subtractToRef(this._camera.target, this._rayDir);\n        //start ray from av to camera\n        this._ray.origin = this._camera.target;\n        this._ray.length = this._rayDir.length();\n        this._ray.direction = this._rayDir.normalize();\n\n        const pi: PickingInfo = this._scene.pickWithRay(this._ray, (mesh) => {\n            //if(mesh==this.avatar||!mesh.isPickable||!mesh.checkCollisions) return false;\n            if (mesh == this._avatar || !mesh.checkCollisions) return false;\n            else return true;\n        }, true);\n\n        if (pi.hit) {\n            //postion the camera in front of the mesh that is obstructing camera\n            if (this._camera.checkCollisions) {\n                const newPos: Vector3 = this._camera.target.subtract(pi.pickedPoint).normalize().scale(this._cameraSkin);\n                pi.pickedPoint.addToRef(newPos, this._camera.position);\n            } else {\n                const nr: number = pi.pickedPoint.subtract(this._camera.target).length();\n                this._camera.radius = nr - this._cameraSkin;\n            }\n        }\n    }\n\n    private _move: boolean = false;\n    public anyMovement(): boolean {\n        return (this._act._walk || this._act._walkback || this._act._turnLeft || this._act._turnRight || this._act._stepLeft || this._act._stepRight);\n    }\n\n    private _onKeyDown(e: KeyboardEvent) {\n        if (!e.key) return;\n        if (e.repeat) return;\n        switch (e.key.toLowerCase()) {\n            case this._actionMap.idleJump.key:\n                this._act._jump = true;\n                break;\n            case \"capslock\":\n                this._act._speedMod = !this._act._speedMod;\n                break;\n            case \"shift\":\n                this._act._speedMod = true;\n                break;\n            case \"up\":\n            case \"arrowup\":\n            case this._actionMap.walk.key:\n                this._act._walk = true;\n                break;\n            case \"left\":\n            case \"arrowleft\":\n            case this._actionMap.turnLeft.key:\n                this._act._turnLeft = true;\n                break;\n            case \"right\":\n            case \"arrowright\":\n            case this._actionMap.turnRight.key:\n                this._act._turnRight = true;\n                break;\n            case \"down\":\n            case \"arrowdown\":\n            case this._actionMap.walkBack.key:\n                this._act._walkback = true;\n                break;\n            case this._actionMap.strafeLeft.key:\n                this._act._stepLeft = true;\n                break;\n            case this._actionMap.strafeRight.key:\n                this._act._stepRight = true;\n                break;\n        }\n        this._move = this.anyMovement();\n    }\n\n    private _onKeyUp(e: KeyboardEvent) {\n        if (!e.key) return;\n        switch (e.key.toLowerCase()) {\n            case \"shift\":\n                this._act._speedMod = false;\n                break;\n            case \"up\":\n            case \"arrowup\":\n            case this._actionMap.walk.key:\n                this._act._walk = false;\n                break;\n            case \"left\":\n            case \"arrowleft\":\n            case this._actionMap.turnLeft.key:\n                this._act._turnLeft = false;\n                this._isTurning = false;\n                break;\n            case \"right\":\n            case \"arrowright\":\n            case this._actionMap.turnRight.key:\n                this._act._turnRight = false;\n                this._isTurning = false;\n                break;\n            case \"down\":\n            case \"arrowdown\":\n            case this._actionMap.walkBack.key:\n                this._act._walkback = false;\n                break;\n            case this._actionMap.strafeLeft.key:\n                this._act._stepLeft = false;\n                break;\n            case this._actionMap.strafeRight.key:\n                this._act._stepRight = false;\n                break;\n        }\n        this._move = this.anyMovement();\n    }\n\n    private _ekb: boolean;\n    public enableKeyBoard(b: boolean) {\n        this._ekb = b;\n        let canvas: HTMLCanvasElement = this._scene.getEngine().getRenderingCanvas();\n        if (b) {\n            canvas.addEventListener(\"keyup\", this._handleKeyUp, false);\n            canvas.addEventListener(\"keydown\", this._handleKeyDown, false);\n        } else {\n            canvas.removeEventListener(\"keyup\", this._handleKeyUp, false);\n            canvas.removeEventListener(\"keydown\", this._handleKeyDown, false);\n        }\n    }\n\n    // control movement by commands rather than keyboard.\n    public walk(b: boolean) {\n        this._act._walk = b;\n    }\n    public walkBack(b: boolean) {\n        this._act._walkback = b;\n    }\n    public walkBackFast(b: boolean) {\n        this._act._walkback = b;\n        this._act._speedMod = b;\n    }\n    public run(b: boolean) {\n        this._act._walk = b;\n        this._act._speedMod = b;\n    }\n    public turnLeft(b: boolean) {\n        this._act._turnLeft = b;\n        if (!b) this._isTurning = b;\n    }\n    public turnLeftFast(b: boolean) {\n        this._act._turnLeft = b;\n        if (!b) this._isTurning = b;\n        this._act._speedMod = b;\n    }\n    public turnRight(b: boolean) {\n        this._act._turnRight = b;\n        if (!b) this._isTurning = b;\n    }\n    public turnRightFast(b: boolean) {\n        this._act._turnRight = b;\n        if (!b) this._isTurning = b;\n        this._act._speedMod = b;\n    }\n    public strafeLeft(b: boolean) {\n        this._act._stepLeft = b;\n    }\n    public strafeLeftFast(b: boolean) {\n        this._act._stepLeft = b;\n        this._act._speedMod = b;\n    }\n    public strafeRight(b: boolean) {\n        this._act._stepRight = b;\n    }\n    public strafeRightFast(b: boolean) {\n        this._act._stepRight = b;\n        this._act._speedMod = b;\n    }\n    public jump() {\n        this._act._jump = true;\n    }\n    public idle() {\n        this._act.reset();\n    }\n\n    private _act: _Action;\n    private _renderer: () => void;\n    private _handleKeyUp: (e) => void;\n    private _handleKeyDown: (e) => void;\n    private _isAG: boolean = false;\n    public isAg() {\n        return this._isAG;\n    }\n\n\n\n\n    private _findSkel(n: Node): Skeleton {\n        let root = this._root(n);\n\n        if (root instanceof Mesh && root.skeleton) return root.skeleton;\n\n        //find all child meshes which have skeletons\n        let ms = root.getChildMeshes(\n            false,\n            (cm) => {\n                if (cm instanceof Mesh) {\n                    if (cm.skeleton) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n\n        //return the skeleton of the first child mesh\n        if (ms.length > 0) return ms[0].skeleton; else return null;\n\n    }\n\n    private _root(tn: Node): Node {\n        if (tn.parent == null) return tn;\n        return this._root(tn.parent);\n    }\n\n    public setAvatar(avatar: Mesh, faceForward: boolean = false): boolean {\n\n        let rootNode = this._root(avatar);\n        if (rootNode instanceof Mesh) {\n            this._avatar = rootNode;\n        } else {\n            console.error(\"Cannot move this mesh. The root node of the mesh provided is not a mesh\");\n            return false;\n        }\n\n\n        this._skeleton = this._findSkel(avatar);\n        this._isAG = this._containsAG(avatar, this._scene.animationGroups, true);\n\n        this._actionMap.reset();\n\n        //animation ranges\n        if (!this._isAG && this._skeleton != null) this._checkAnimRanges(this._skeleton);\n\n        this._setRHS(avatar);\n        this.setFaceForward(faceForward);\n\n        return true;\n    }\n\n    public getAvatar() {\n        return this._avatar;\n    }\n\n    // force a skeleton to be the avatar skeleton\n    // should not be calling this normally\n    public setAvatarSkeleton(skeleton: Skeleton) {\n        this._skeleton = skeleton;\n\n        //skeletons animated by animation groups seem to have \"overrideMesh\" property\n        if (this._skeleton != null && this._skeleton.overrideMesh) this._isAG = true; else this._isAG = false;\n\n        if (!this._isAG && this._skeleton != null) this._checkAnimRanges(this._skeleton);\n    }\n\n    public getSkeleton() {\n        return this._skeleton;\n    }\n\n    // does this character have any animations ?\n    // remember we can use meshes without anims as characters too\n    private _hasAnims: boolean = false;\n\n    /**\n     * The avatar/character can be made up of multiple meshes arranged in a hierarchy.\n     * As such we will pick the root of the hierarchy as the avatar.\n     * The root should be a mesh as otherwise we cannot move it with moveWithCollision() method.\n     *\n     * Mutiple meshes in the hierarchy may have skeletons (if two or more meshes have skeleton then\n     * the skeleton will mostly likely be the same).\n     * So we will pick as avatar skeleton, the  skeleton of the first mesh in the hierachy which has\n     * a skeleton\n     *\n     * @param avatar\n     * @param camera\n     * @param scene\n     * @param actionMap - maps actions to animations and other data like speed,sound etc\n     * @param faceForward\n     */\n    constructor(avatar: Mesh, camera: ArcRotateCamera, scene: Scene, actionMap?: {}, faceForward = false) {\n\n        this._camera = camera;\n        this._scene = scene;\n\n        let success = this.setAvatar(avatar, faceForward);\n        if (!success) {\n            console.error(\"unable to set avatar\");\n        }\n\n\n        let dataType: string = null;\n        if (actionMap != null) {\n            dataType = this.setActionMap(<ActionMap>actionMap);\n        }\n\n        //try to use the existing avatar animations\n\n        //animation ranges\n        if (!this._isAG && this._skeleton != null) this._checkAnimRanges(this._skeleton);\n        //animation groups\n        if (this._isAG) {\n\n        }\n\n\n        this._savedCameraCollision = this._camera.checkCollisions;\n\n        this._act = new _Action();\n\n        this._renderer = () => { this._moveAVandCamera() };\n        this._handleKeyUp = (e) => { this._onKeyUp(e) };\n        this._handleKeyDown = (e) => { this._onKeyDown(e) };\n    }\n}\n\n\n\nclass _Action {\n\n    public _walk: boolean = false;\n    public _walkback: boolean = false;\n    public _turnRight: boolean = false;\n    public _turnLeft: boolean = false;\n    public _stepRight: boolean = false;\n    public _stepLeft: boolean = false;\n    public _jump: boolean = false;\n\n    // speed modifier - changes speed of movement\n    public _speedMod: boolean = false;\n\n\n    constructor() {\n        this.reset();\n    }\n\n    reset() {\n        this._walk = false;\n        this._walkback = false;\n        this._turnRight = false;\n        this._turnLeft = false;\n        this._stepRight = false;\n        this._stepLeft = false;\n        this._jump = false;\n        this._speedMod = false;\n    }\n}\n\nexport class ActionData {\n    public id: string;\n    public speed: number;\n    //_ds default speed.  speed is set to this on reset\n    public ds: number;\n    public sound: string;\n    public key: string;\n    //_dk defailt key\n    public dk: string;\n\n    //animation data\n    //if _ag is null then _name will be used to play animationrange\n    public name: string = \"\";\n    public ag: AnimationGroup;\n    public loop: boolean = true;\n    public rate: number = 1;\n\n    public exist: boolean = false;\n\n    public constructor(id?: string, speed = 1, key?: string) {\n        this.id = id;\n        this.speed = speed;\n        this.ds = speed;\n        this.key = key;\n        this.dk = key;\n    }\n\n    public reset() {\n        this.name = \"\";\n        this.speed = this.ds;\n        this.key = this.dk;\n        this.loop = true;\n        this.rate = 1;\n        this.sound = \"\";\n        this.exist = false;\n    }\n\n}\n\nexport class ActionMap {\n    public walk = new ActionData(\"walk\", 3, \"w\");\n    public walkBack = new ActionData(\"walkBack\", 1.5, \"s\");\n    public walkBackFast = new ActionData(\"walkBackFast\", 3, \"na\");\n    public idle = new ActionData(\"idle\", 0, \"na\");\n    public idleJump = new ActionData(\"idleJump\", 6, \" \");\n    public run = new ActionData(\"run\", 6, \"na\");\n    public runJump = new ActionData(\"runJump\", 6, \"na\");\n    public fall = new ActionData(\"fall\", 0, \"na\");\n    public turnLeft = new ActionData(\"turnLeft\", Math.PI / 8, \"a\");\n    public turnLeftFast = new ActionData(\"turnLeftFast\", Math.PI / 4, \"na\");\n    public turnRight = new ActionData(\"turnRight\", Math.PI / 8, \"d\");\n    public turnRightFast = new ActionData(\"turnRightFast\", Math.PI / 4, \"na\");\n    public strafeLeft = new ActionData(\"strafeLeft\", 1.5, \"q\");\n    public strafeLeftFast = new ActionData(\"strafeLeftFast\", 3, \"na\");\n    public strafeRight = new ActionData(\"strafeRight\", 1.5, \"e\");\n    public strafeRightFast = new ActionData(\"strafeRightFast\", 3, \"na\");\n    public slideBack = new ActionData(\"slideBack\", 0, \"na\");\n\n    public reset() {\n        let keys: string[] = Object.keys(this);\n        for (let key of keys) {\n            let act = this[key];\n            if (!(act instanceof ActionData)) continue;\n            act.reset()\n        }\n    }\n};\n\nexport class CCSettings {\n    public faceForward: boolean;\n    public gravity: number;\n    public minSlopeLimit: number;\n    public maxSlopeLimit: number;\n    public stepOffset: number;\n    public cameraElastic: boolean = true;\n    public cameraTarget: Vector3 = Vector3.Zero();\n    public noFirstPerson: boolean = false;\n    public topDown: boolean = true;\n    //turningOff takes effect only when topDown is false\n    public turningOff: boolean = true;\n    public keyboard: boolean = true;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_babylonjs__;"],"sourceRoot":""}